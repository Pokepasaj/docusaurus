"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2640],{4737:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>p,default:()=>m,frontMatter:()=>o,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"api/app/api-app-init","title":"init","description":"Table of Contents","source":"@site/docs/api/app/init.md","sourceDirName":"api/app","slug":"/api/app/api-app-init","permalink":"/docusaurus/api/app/api-app-init","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api/app/init.md","tags":[],"version":"current","frontMatter":{"id":"api-app-init","title":"init"},"sidebar":"apiSidebar","previous":{"title":"kget","permalink":"/docusaurus/api/app/api-app-kget"},"next":{"title":"features","permalink":"/docusaurus/api/app/api-app-features"}}');var r=a(4848),l=a(8453),i=a(5537),s=a(9329);const o={id:"api-app-init",title:"init"},p="init",c={},d=[{value:"Table of Contents",id:"table-of-contents",level:2},{value:"Overview",id:"overview",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Return Value",id:"return-value",level:2},{value:"Usage Examples",id:"usage-examples",level:2},{value:"Helm like usage",id:"helm-like-usage",level:3},{value:"Optional props",id:"optional-props",level:3},{value:"Adding Profiles",id:"adding-profiles",level:3}];function u(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"init",children:(0,r.jsx)(n.code,{children:"init"})})}),"\n",(0,r.jsx)(n.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#init",children:(0,r.jsx)(n.code,{children:"init"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#table-of-contents",children:"Table of Contents"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#overview",children:"Overview"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#parameters",children:"Parameters"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#return-value",children:"Return Value"})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#usage-examples",children:"Usage Examples"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#helm-like-usage",children:"Helm like usage"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#optional-props",children:"Optional props"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#adding-profiles",children:"Adding Profiles"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(n.p,{children:"Initializes an application manifest using a specified profile, applying its default properties and merging them with the provided ones."}),"\n",(0,r.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"props"})})," - (object) Additional properties to apply."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"profile"})})," - (string) The profile to use for initialization."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"return-value",children:"Return Value"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Returns a rendered manifest object with the profile\u2019s properties applied."}),"\n",(0,r.jsx)(n.li,{children:"Returns a rendered manifest object with the profile\u2019s properties applied."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"usage-examples",children:"Usage Examples"}),"\n",(0,r.jsx)(n.h3,{id:"helm-like-usage",children:"Helm like usage"}),"\n",(0,r.jsxs)(i.A,{children:[(0,r.jsx)(s.A,{value:"jsonnet",label:"Jsonnet",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"local k = import 'konn/main.libsonnet';\n\nlocal app = k.app([\n  k.fromYaml([\n    importstr './deployment.yaml',\n    importstr './svc.yaml',\n  ], {\n    app: 'nginx123',\n    svc: 'my-svc12345',\n  }),\n], {\n  enabled: false,\n});\napp.init()\n"})})}),(0,r.jsx)(s.A,{value:"yaml",label:"YAML Output",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"- apiVersion: apps/v1\n  kind: Deployment\n  metadata:\n    name: nginx123\n  spec:\n    selector:\n      matchLabels:\n        app: nginx123\n    template:\n      metadata:\n        labels:\n          app: nginx123\n      spec:\n        containers:\n          - image: nginx\n- apiVersion: v1\n  kind: Service\n  metadata:\n    name: my-svc12345\n  spec:\n    ports:\n      - port: 80\n        protocol: TCP\n        targetPort: 9376\n    selector:\n      app.kubernetes.io/name: MyApp\n"})})}),(0,r.jsx)(s.A,{value:"json",label:"JSON Output",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'[\n   {\n      "apiVersion": "apps/v1",\n      "kind": "Deployment",\n      "metadata": {\n         "name": "nginx123"\n      },\n      "spec": {\n         "selector": {\n            "matchLabels": {\n               "app": "nginx123"\n            }\n         },\n         "template": {\n            "metadata": {\n               "labels": {\n                  "app": "nginx123"\n               }\n            },\n            "spec": {\n               "containers": [\n                  {\n                     "image": "nginx"\n                  }\n               ]\n            }\n         }\n      }\n   },\n   {\n      "apiVersion": "v1",\n      "kind": "Service",\n      "metadata": {\n         "name": "my-svc12345"\n      },\n      "spec": {\n         "ports": [\n            {\n               "port": 80,\n               "protocol": "TCP",\n               "targetPort": 9376\n            }\n         ],\n         "selector": {\n            "app.kubernetes.io/name": "MyApp"\n         }\n      }\n   }\n]\n'})})}),(0,r.jsx)(s.A,{value:"deployment-template",label:"Deployment Template",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: "%(app)s"\nspec:\n  selector:\n    matchLabels:\n      app: "%(app)s"\n  template:\n    metadata:\n      labels:\n        app: "%(app)s"\n    spec:\n      containers:\n      - image: nginx\n'})})}),(0,r.jsx)(s.A,{value:"service-template",label:"Service Template",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'apiVersion: v1\nkind: Service\nmetadata:\n  name: "%(svc)s"\nspec:\n  selector:\n    app.kubernetes.io/name: MyApp\n  ports:\n    - protocol: TCP\n      port: 80\n      targetPort: 9376\n'})})})]}),"\n",(0,r.jsx)(n.h3,{id:"optional-props",children:"Optional props"}),"\n",(0,r.jsxs)(i.A,{children:[(0,r.jsx)(s.A,{value:"jsonnet",label:"Jsonnet",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"local k = import 'konn/main.libsonnet';\n\nlocal app = k.app([\n  k.fromYaml([\n    importstr './deployment.yaml',\n    importstr './svc.yaml',\n  ], {\n    app: 'nginx123',\n    svc: 'my-svc12345',\n  }),\n  function(ctx, props) if props.enabled then {\n    apiVersion: 'v1',\n    kind: 'ConfigMap',\n    metadata: {\n      name: 'example-config',\n    },\n    data: {\n      key: 'value',\n    },\n  },\n], {\n  enabled: true,  // setting this to false will exclude the ConfigMap\n});\n\napp.init()\n"})})}),(0,r.jsx)(s.A,{value:"yaml",label:"YAML Output",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"- apiVersion: apps/v1\n  kind: Deployment\n  metadata:\n    name: nginx123\n  spec:\n    selector:\n      matchLabels:\n        app: nginx123\n    template:\n      metadata:\n        labels:\n          app: nginx123\n      spec:\n        containers:\n          - image: nginx\n- apiVersion: v1\n  kind: Service\n  metadata:\n    name: my-svc12345\n  spec:\n    ports:\n      - port: 80\n        protocol: TCP\n        targetPort: 9376\n    selector:\n      app.kubernetes.io/name: MyApp\n- apiVersion: v1\n  data:\n    key: value\n  kind: ConfigMap\n  metadata:\n    name: example-config\n"})})}),(0,r.jsx)(s.A,{value:"json",label:"JSON Output",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'[\n   {\n      "apiVersion": "apps/v1",\n      "kind": "Deployment",\n      "metadata": {\n         "name": "nginx123"\n      },\n      "spec": {\n         "selector": {\n            "matchLabels": {\n               "app": "nginx123"\n            }\n         },\n         "template": {\n            "metadata": {\n               "labels": {\n                  "app": "nginx123"\n               }\n            },\n            "spec": {\n               "containers": [\n                  {\n                     "image": "nginx"\n                  }\n               ]\n            }\n         }\n      }\n   },\n   {\n      "apiVersion": "v1",\n      "kind": "Service",\n      "metadata": {\n         "name": "my-svc12345"\n      },\n      "spec": {\n         "ports": [\n            {\n               "port": 80,\n               "protocol": "TCP",\n               "targetPort": 9376\n            }\n         ],\n         "selector": {\n            "app.kubernetes.io/name": "MyApp"\n         }\n      }\n   },\n   {\n      "apiVersion": "v1",\n      "data": {\n         "key": "value"\n      },\n      "kind": "ConfigMap",\n      "metadata": {\n         "name": "example-config"\n      }\n   }\n]\n'})})})]}),"\n",(0,r.jsx)(n.h3,{id:"adding-profiles",children:"Adding Profiles"}),"\n",(0,r.jsxs)(i.A,{children:[(0,r.jsx)(s.A,{value:"jsonnet",label:"Jsonnet",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"local app = import '../../vendor/konn/app.libsonnet';\nlocal extension = import '../../vendor/konn/extension.libsonnet';\nlocal feature = import '../../vendor/konn/feature.libsonnet';\nlocal k = import 'konn/main.libsonnet';\n\n\n// Create an extension for the deployment\nlocal ext = extension.new(\n  function(ctx, target, props) target {\n    metadata+: {\n      extended: true,\n      profile: ctx.profile(),\n    },\n  },\n  // only take affect for Deployments, if you remove selector it will take affect on everything\n  selector=function(ctx, target, props) target.is('Deployment'),\n);\n\n// Define the configuration with additional properties\nlocal appTest = app.new(\n  props={\n    app: 'nginx',\n    svc: 'my-svc',\n  },\n  profiles={\n    dev: {\n      name: 'dev',\n    },\n    prd: {\n      name: 'prd',\n    },\n  },\n  features=[\n    feature.new([\n      k.fromYaml(\n        [\n          importstr './deployment.yaml',\n          importstr './svc.yaml',\n        ],\n      ),\n    ], extensions=[ext]),  // using the profile trough ext we defined at the start\n  ],\n);\n\n// Init the app with a profile of your choosing\n\nappTest.init(profile='prd')\n"})})}),(0,r.jsx)(s.A,{value:"yaml",label:"YAML Output",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"- apiVersion: apps/v1\n  kind: Deployment\n  metadata:\n    extended: true\n    name: nginx\n    profile: prd\n  spec:\n    selector:\n      matchLabels:\n        app: nginx\n    template:\n      metadata:\n        labels:\n          app: nginx\n      spec:\n        containers:\n          - image: nginx\n- apiVersion: v1\n  kind: Service\n  metadata:\n    name: my-svc\n  spec:\n    ports:\n      - port: 80\n        protocol: TCP\n        targetPort: 9376\n    selector:\n      app.kubernetes.io/name: MyApp\n"})})}),(0,r.jsx)(s.A,{value:"json",label:"JSON Output",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'[\n   {\n      "apiVersion": "apps/v1",\n      "kind": "Deployment",\n      "metadata": {\n         "extended": true,\n         "name": "nginx",\n         "profile": "prd"\n      },\n      "spec": {\n         "selector": {\n            "matchLabels": {\n               "app": "nginx"\n            }\n         },\n         "template": {\n            "metadata": {\n               "labels": {\n                  "app": "nginx"\n               }\n            },\n            "spec": {\n               "containers": [\n                  {\n                     "image": "nginx"\n                  }\n               ]\n            }\n         }\n      }\n   },\n   {\n      "apiVersion": "v1",\n      "kind": "Service",\n      "metadata": {\n         "name": "my-svc"\n      },\n      "spec": {\n         "ports": [\n            {\n               "port": 80,\n               "protocol": "TCP",\n               "targetPort": 9376\n            }\n         ],\n         "selector": {\n            "app.kubernetes.io/name": "MyApp"\n         }\n      }\n   }\n]\n'})})})]})]})}function m(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},9329:(e,n,a)=>{a.d(n,{A:()=>i});a(6540);var t=a(4164);const r={tabItem:"tabItem_Ymn6"};var l=a(4848);function i(e){let{children:n,hidden:a,className:i}=e;return(0,l.jsx)("div",{role:"tabpanel",className:(0,t.A)(r.tabItem,i),hidden:a,children:n})}},5537:(e,n,a)=>{a.d(n,{A:()=>k});var t=a(6540),r=a(4164),l=a(5627),i=a(6347),s=a(372),o=a(604),p=a(1861),c=a(8749);function d(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:n,children:a}=e;return(0,t.useMemo)((()=>{const e=n??function(e){return d(e).map((e=>{let{props:{value:n,label:a,attributes:t,default:r}}=e;return{value:n,label:a,attributes:t,default:r}}))}(a);return function(e){const n=(0,p.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,a])}function m(e){let{value:n,tabValues:a}=e;return a.some((e=>e.value===n))}function h(e){let{queryString:n=!1,groupId:a}=e;const r=(0,i.W6)(),l=function(e){let{queryString:n=!1,groupId:a}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:n,groupId:a});return[(0,o.aZ)(l),(0,t.useCallback)((e=>{if(!l)return;const n=new URLSearchParams(r.location.search);n.set(l,e),r.replace({...r.location,search:n.toString()})}),[l,r])]}function x(e){const{defaultValue:n,queryString:a=!1,groupId:r}=e,l=u(e),[i,o]=(0,t.useState)((()=>function(e){let{defaultValue:n,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!m({value:n,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const t=a.find((e=>e.default))??a[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:l}))),[p,d]=h({queryString:a,groupId:r}),[x,f]=function(e){let{groupId:n}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(n),[r,l]=(0,c.Dv)(a);return[r,(0,t.useCallback)((e=>{a&&l.set(e)}),[a,l])]}({groupId:r}),g=(()=>{const e=p??x;return m({value:e,tabValues:l})?e:null})();(0,s.A)((()=>{g&&o(g)}),[g]);return{selectedValue:i,selectValue:(0,t.useCallback)((e=>{if(!m({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);o(e),d(e),f(e)}),[d,f,l]),tabValues:l}}var f=a(9136);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=a(4848);function b(e){let{className:n,block:a,selectedValue:t,selectValue:i,tabValues:s}=e;const o=[],{blockElementScrollPositionUntilNextRender:p}=(0,l.a_)(),c=e=>{const n=e.currentTarget,a=o.indexOf(n),r=s[a].value;r!==t&&(p(n),i(r))},d=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const a=o.indexOf(e.currentTarget)+1;n=o[a]??o[0];break}case"ArrowLeft":{const a=o.indexOf(e.currentTarget)-1;n=o[a]??o[o.length-1];break}}n?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":a},n),children:s.map((e=>{let{value:n,label:a,attributes:l}=e;return(0,v.jsx)("li",{role:"tab",tabIndex:t===n?0:-1,"aria-selected":t===n,ref:e=>{o.push(e)},onKeyDown:d,onClick:c,...l,className:(0,r.A)("tabs__item",g.tabItem,l?.className,{"tabs__item--active":t===n}),children:a??n},n)}))})}function j(e){let{lazy:n,children:a,selectedValue:l}=e;const i=(Array.isArray(a)?a:[a]).filter(Boolean);if(n){const e=i.find((e=>e.props.value===l));return e?(0,t.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:i.map(((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==l})))})}function y(e){const n=x(e);return(0,v.jsxs)("div",{className:(0,r.A)("tabs-container",g.tabList),children:[(0,v.jsx)(b,{...n,...e}),(0,v.jsx)(j,{...n,...e})]})}function k(e){const n=(0,f.A)();return(0,v.jsx)(y,{...e,children:d(e.children)},String(n))}},8453:(e,n,a)=>{a.d(n,{R:()=>i,x:()=>s});var t=a(6540);const r={},l=t.createContext(r);function i(e){const n=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(l.Provider,{value:n},e.children)}}}]);