"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[681],{124:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"main","title":"main","description":"This module serves as the entry point for managing and generating configurations. It integrates various components\u2014such as applications, features, manifests, configurations, and extensions\u2014while exposing key utility functions for parsing, templating, and conditional logic.","source":"@site/docs/main.md","sourceDirName":".","slug":"/main","permalink":"/docusaurus/main","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/main.md","tags":[],"version":"current","frontMatter":{"id":"main","title":"main"},"sidebar":"LearnSidebar","previous":{"title":"util","permalink":"/docusaurus/util"}}');var s=i(4848),o=i(8453);const a={id:"main",title:"main"},r=void 0,l={},c=[{value:"Utilizes",id:"utilizes",level:2},{value:"Exposed Functions",id:"exposed-functions",level:2},{value:"Library Functions (from lib.libsonnet)",id:"library-functions-from-liblibsonnet",level:2},{value:"Manifest Helpers (from manifest.libsonnet)",id:"manifest-helpers-from-manifestlibsonnet",level:2},{value:"Configuration Constructors",id:"configuration-constructors",level:2}];function d(n){const e={h2:"h2",p:"p",...(0,o.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.p,{children:"This module serves as the entry point for managing and generating configurations. It integrates various components\u2014such as applications, features, manifests, configurations, and extensions\u2014while exposing key utility functions for parsing, templating, and conditional logic."}),"\n",(0,s.jsx)(e.h2,{id:"utilizes",children:"Utilizes"}),"\n",(0,s.jsx)(e.p,{children:"\u2022 app \u2192 Manages application configurations."}),"\n",(0,s.jsx)(e.p,{children:"\u2022 config \u2192 Handles configuration creation and transformation."}),"\n",(0,s.jsx)(e.p,{children:"\u2022 context \u2192 Provides contextual information (not explicitly used here)."}),"\n",(0,s.jsx)(e.p,{children:"\u2022 extension \u2192 Defines and applies extensions to configurations."}),"\n",(0,s.jsx)(e.p,{children:"\u2022 feature \u2192 Manages feature-based configurations."}),"\n",(0,s.jsx)(e.p,{children:"\u2022 lib \u2192 Provides helper functions for validation and type checking."}),"\n",(0,s.jsx)(e.p,{children:"\u2022 manifest \u2192 Handles manifest creation and transformation."}),"\n",(0,s.jsx)(e.p,{children:"\u2022 util \u2192 Includes general utility functions like templating and YAML parsing."}),"\n",(0,s.jsx)(e.h2,{id:"exposed-functions",children:"Exposed Functions"}),"\n",(0,s.jsx)(e.p,{children:"Utility Functions (from util.libsonnet)"}),"\n",(0,s.jsx)(e.p,{children:"\u2022 yaml \u2192 Parses YAML strings into Jsonnet objects."}),"\n",(0,s.jsx)(e.p,{children:"\u2022 template \u2192 Applies templating to strings while removing null values."}),"\n",(0,s.jsx)(e.p,{children:"\u2022 onlyIf \u2192 Conditionally applies a patch based on a test condition."}),"\n",(0,s.jsx)(e.h2,{id:"library-functions-from-liblibsonnet",children:"Library Functions (from lib.libsonnet)"}),"\n",(0,s.jsx)(e.p,{children:"\u2022 isConfig \u2192 Checks if an object is a valid configuration."}),"\n",(0,s.jsx)(e.p,{children:"\u2022 isManifest \u2192 Checks if an object is a valid manifest."}),"\n",(0,s.jsx)(e.p,{children:"\u2022 isResolvable \u2192 Determines if an object can be resolved dynamically."}),"\n",(0,s.jsx)(e.p,{children:"\u2022 isRenderable \u2192 Determines if an object supports rendering."}),"\n",(0,s.jsx)(e.h2,{id:"manifest-helpers-from-manifestlibsonnet",children:"Manifest Helpers (from manifest.libsonnet)"}),"\n",(0,s.jsx)(e.p,{children:"\u2022 fromYaml \u2192 Converts a YAML string into a manifest object."}),"\n",(0,s.jsx)(e.p,{children:"\u2022 fromJson \u2192 Converts a JSON string into a manifest object."}),"\n",(0,s.jsx)(e.h2,{id:"configuration-constructors",children:"Configuration Constructors"}),"\n",(0,s.jsx)(e.p,{children:"These functions instantiate different configuration types, providing a structured way to define configurations, features, and extensions."}),"\n",(0,s.jsx)(e.p,{children:"\u2022 app(...) \u2192 Creates an application manifest with features, properties, profiles, and extensions."}),"\n",(0,s.jsx)(e.p,{children:"\u2022 feature(...) \u2192 Defines a feature, including configuration, properties, and extensions."}),"\n",(0,s.jsx)(e.p,{children:"\u2022 manifest(...) \u2192 Creates a manifest with a render function, properties, and transformation logic (filter & map)."}),"\n",(0,s.jsx)(e.p,{children:"\u2022 config(...) \u2192 Creates a standalone configuration with rendering logic."}),"\n",(0,s.jsx)(e.p,{children:"\u2022 extension(...) \u2192 Defines an extension that applies transformations to configurations."})]})}function u(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(d,{...n})}):d(n)}},8453:(n,e,i)=>{i.d(e,{R:()=>a,x:()=>r});var t=i(6540);const s={},o=t.createContext(s);function a(n){const e=t.useContext(o);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:a(n.components),t.createElement(o.Provider,{value:e},n.children)}}}]);