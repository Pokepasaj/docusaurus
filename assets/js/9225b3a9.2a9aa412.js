"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[950],{5800:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"config","title":"config","description":"What is a Config","source":"@site/docs/config.md","sourceDirName":".","slug":"/config","permalink":"/docusaurus/config","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/config.md","tags":[],"version":"current","frontMatter":{"id":"config","title":"config"},"sidebar":"tutorialSidebar","next":{"title":"Features","permalink":"/docusaurus/features"}}');var o=t(4848),s=t(8453);const a={id:"config",title:"config"},r=void 0,c={},l=[];function d(e){const n={a:"a",admonition:"admonition",code:"code",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["What is a ",(0,o.jsx)(n.a,{href:"api/config/api-config-new",children:"Config"})]}),"\n",(0,o.jsx)(n.p,{children:"At its essence, a config in Konn is simply an object with key-value pairs. It serves as the foundation for templating configurations\u2014whether for Kubernetes, infrastructure, applications, or any system that supports structured configuration formats like YAML, JSON, or TOML."}),"\n",(0,o.jsx)(n.p,{children:"Why Konn for Configuration Management?"}),"\n",(0,o.jsx)(n.p,{children:"Unlike Helm, which relies heavily on find-and-replace templating, Konn offers a more powerful and flexible way to create configuration variants. Instead of managing multiple Helm charts or complex overlays, Konn allows you to define a single base configuration and generate different variations based on context."}),"\n",(0,o.jsx)(n.p,{children:"For example:"}),"\n",(0,o.jsx)(n.p,{children:"\u2022You might have multiple environments (e.g., dev, staging, production)."}),"\n",(0,o.jsx)(n.p,{children:"\u2022One environment may require an additional debugging pod."}),"\n",(0,o.jsx)(n.p,{children:"\u2022Instead of maintaining multiple Helm releases, Konn enables you to express these     variations efficiently."}),"\n",(0,o.jsx)(n.p,{children:"In Konn, every configuration is ultimately a render function that returns an object. This approach ensures that configurations remain declarative, reusable"}),"\n",(0,o.jsx)(n.p,{children:"This is a valid config"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"{\n    type: 'test',\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:"But let`s say we want to add properties to it and we add it in a way that we are going to be able to edit trough various different profiles and we need some way to get the props to the right place."}),"\n",(0,o.jsx)(n.p,{children:"A config is a function that renders an object and all basic configs no matter how they are supplied while using this will end up wrapped like this"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"ctx"})," -> determines where the config is used and making changes to it based on what is included in the context\nWhat is the context? -> list of other included configs"]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"props"})," -> props are the current props down at any give point of time of initiation"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"local k = import 'konn/main.libsonnet';\nk.config(function(ctx, props)\n{\n    type: 'test',\n})\n"})}),"\n",(0,o.jsxs)(n.admonition,{title:"Tip",type:"tip",children:[(0,o.jsx)(n.p,{children:"It`s built with preview in mind."}),(0,o.jsx)(n.p,{children:"Any time you are using Konn you can render in place to preview and test what you are working on at the smallest level."})]}),"\n",(0,o.jsx)(n.p,{children:"From this point onwards you will notice that the examples will be using the render function first and props second:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"local k = import 'konn/main.libsonnet';\nk.config(function(ctx, props)\n{\n    type: props.type,\n}, {\n    type: 'test'\n\n})\n"})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>r});var i=t(6540);const o={},s=i.createContext(o);function a(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);