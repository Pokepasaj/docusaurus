"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[219],{254:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"extensions","title":"extensions","description":"This module provides extensions that modify configurations dynamically. Extensions allow rendering, filtering, applying transformations, and overriding properties on configuration objects.","source":"@site/docs/extensions.md","sourceDirName":".","slug":"/extensions","permalink":"/docusaurus/extensions","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/extensions.md","tags":[],"version":"current","frontMatter":{"id":"extensions","title":"extensions"},"sidebar":"konnSidebar","previous":{"title":"context","permalink":"/docusaurus/context"}}');var i=t(4848),o=t(8453);const r={id:"extensions",title:"extensions"},a=void 0,c={},d=[];function p(e){const n={p:"p",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"This module provides extensions that modify configurations dynamically. Extensions allow rendering, filtering, applying transformations, and overriding properties on configuration objects."}),"\n",(0,i.jsx)(n.p,{children:"Encapsulates reusable transformations applied to configurations.\n\u2022 new \u2192\nCreates a new extension with:\n\u2022 render \u2192 a function that modifies the target config.\n\u2022 props \u2192 default properties.\n\u2022 selector \u2192 determines whether the extension should be applied.\n\u2022 extends \u2192 an existing configuration or manifest to extend."}),"\n",(0,i.jsx)(n.p,{children:"\u2022 render \u2192\nGenerates a preview of the extension based on extends and props.\nDetermines whether extends is:\nResolvable \u2192 applies extensions and renders configs.\nA config object \u2192 renders it with modifications.\nA plain object \u2192 modifies it directly."}),"\n",(0,i.jsx)(n.p,{children:"\u2022 selector \u2192\nTests a configuration to see if the extension should be applied."}),"\n",(0,i.jsx)(n.p,{children:"\u2022 apply \u2192\nApplies the extension to a given configuration if selector returns true.\nUses the render function to modify the target."}),"\n",(0,i.jsx)(n.p,{children:"\u2022 extend \u2192\nCreates a new extension based on an existing one.\nApplies the original render function before the new transformation."}),"\n",(0,i.jsx)(n.p,{children:"\u2022 overrides \u2192\nReplaces properties dynamically at render time.\nAccepts:\nAn object \u2192 directly replaces properties.\nA function \u2192 computes overrides based on existing props."}),"\n",(0,i.jsx)(n.p,{children:"\u2022 configure \u2192\nAlias of override, used for configuring the extension."})]})}function l(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var s=t(6540);const i={},o=s.createContext(i);function r(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);